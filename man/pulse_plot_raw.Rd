% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pulse_plot.R
\name{pulse_plot_raw}
\alias{pulse_plot_raw}
\title{Plot raw PULSE data}
\usage{
pulse_plot_raw(heart_rates, ID, i, range = 0)
}
\arguments{
\item{heart_rates}{The output of \code{\link[=PULSE]{PULSE()}} (or \code{\link[=pulse_heart]{pulse_heart()}}, \code{\link[=pulse_normalize]{pulse_normalize()}} and \code{\link[=pulse_summarise]{pulse_summarise()}}).}

\item{ID}{String naming the target channel id (must match exactly)}

\item{i}{A numeric value pointing to the index of the target window}

\item{range}{A numeric value indicating how many more windows to plot (centered around \code{i}, i.e., if \code{i = 5} and \code{range = 2}, windows 3 to 7 will be plotted, with window 5 at the center)}
}
\value{
A ggplot object that can be augmented using ggplot2 syntax or plotted right away
}
\description{
A shortcut function based on \code{ggplot2} to facilitate the quick inspection of the raw data underlying the analysis (with the peaks detected signaled with red dots). Useful to visually inspect the performance of the algorithm.
}
\details{
This function is \strong{NOT meant} for high-level displaying of the data - it's simply a quick shortcut to facilitate data inspection.

When inspecting the plot, assess if red dots top all heartbeats and no more than that. Difficult datasets may result in true heartbeats being missed or non-heartbeats (noise) being erroneously detected (false positives and/or false negatives). Note that the wider the time window (controlled by the \code{window_width_secs} parameter in \code{\link[=pulse_split]{pulse_split()}}) and the higher the heartbeat rate, the less critical are a few false positives or negatives (over a 10 secs window, missing 1 peak in 10 results in hz to drop by 10\% (from 1 to 0.9), while over a 30 secs window, missing 1 peak in 30 results in a drop of 3.33\% (from 1 to 0.967), and missing 1 peak in 60 results in a drop of just 1.7\%.
}
\examples{
# Begin prepare data ----
paths <- pulse_example("RAW_original_")
heart_rates <- PULSE(
  paths,
  discard_channels  = paste0("s", 5:10),
  window_width_secs = 30,
  window_shift_secs = 60,
  min_data_points   = 0.8,
  target_freq = 40,
  bandwidth   = 0.2,
  with_progress = TRUE
  )
# End prepare data ----

# Single window (more detail)
pulse_plot_raw(heart_rates, "limpet_1", 5)

# Multiple windows (less detail but more context)
pulse_plot_raw(heart_rates, "limpet_1", 5, 2) # stats are shown for window 'i'

# The plot can be modified using ggplot2 syntax
pulse_plot_raw(heart_rates, "limpet_1", 10) + ggplot2::theme_classic()
}
\seealso{
\code{\link[=pulse_plot_all]{pulse_plot_all()}}, \code{\link[=PULSE]{PULSE()}}, \code{\link[=pulse_heart]{pulse_heart()}}, \code{\link[=pulse_normalize]{pulse_normalize()}}
}
